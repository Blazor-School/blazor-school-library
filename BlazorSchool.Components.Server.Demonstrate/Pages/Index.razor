@page "/"
@using BlazorSchool.Components.Server.Demonstrate.Data
@using BlazorSchool.Components.Web.UI.Window
@using BlazorSchool.Components.Web.UI.CaptureElement
@using BlazorSchool.Components.Web.UI.Button

<PageTitle>Index</PageTitle>

<style>
    .grabbable
    {
        cursor: move;
    }
</style>
@MyProperty
<BlazorCaptureElement Token='asdfsadfsd'>
    <div class="border border-3 border-primary">Test</div>
</BlazorCaptureElement>
<BlazorCapturePdfButton class="btn btn-primary" CapturingToken='asdfsadfsd' OnPopupBlocked="Test" OnClicked="Test">Blazor School Capture</BlazorCapturePdfButton>

<BlazorCaptureElement>
    <div class="border border-3 border-primary">Test</div>
    <BlazorCapturePdfButton class="btn btn-primary" OnPopupBlocked="Test">Blazor School Capture</BlazorCapturePdfButton>
</BlazorCaptureElement>

    <BlazorWindow class="border border-3 border-primary">
        
        <BlazorWindowTitle class="grabbable d-flex flex-row">
            <div class="bg-success text-white">Window title</div>
            <BlazorWindowCloseAction OnCloseClick="() => DisplayWindow=!DisplayWindow">
                Close
            </BlazorWindowCloseAction>
        </BlazorWindowTitle>
        <BlazorWindowContent>Window content</BlazorWindowContent>
    </BlazorWindow>
<ButtonComponent OnOpenClick="() => DisplayWindow=!DisplayWindow">Open Blazor Window</ButtonComponent>

@code {
    public string MyProperty { get; set; } = "";

    public void Test()
    {
        MyProperty = "Popup blocked";
    }

    public bool DisplayWindow { get; set; } = true;
}
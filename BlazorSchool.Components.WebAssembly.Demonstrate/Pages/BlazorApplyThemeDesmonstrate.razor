@page "/blazor-apply-theme-demonstrate"
@using BlazorSchool.Components.Web.Theme;
@using BlazorSchool.Components.Web.UI.Window

<BlazorApplyTheme ThemePackPath="@DefaultTheme.Bootstrap" InitialTheme="Jackdaw" ExtendedThemePackPath="theme-packs/MyTheme.json" Context="ApplyTheme">
    <div>
        Custom Elemenent:
        <button class="@ApplyTheme["my-element"]">My button</button>
    </div>
    <div>
        Built-in Blazor Library component:
        <BlazorWindow InitialVisibility="false" Token="theme-window-token">
            <BlazorWindowTitle>
                <div class="bg-primary text-white">Drag me</div>
                <BlazorWindowCloseButton>Close</BlazorWindowCloseButton>
            </BlazorWindowTitle>
            <BlazorWindowContent>Window content</BlazorWindowContent>
        </BlazorWindow>
        <BlazorWindowOpenButton TargetToken="theme-window-token">Open</BlazorWindowOpenButton>
    </div>

    <BlazorThemeSwitcher Context="ThemeSwitcher">
        @foreach (string themeName in ThemeSwitcher.Themes)
        {
            <button type="button" @onclick="_ => ThemeSwitcher.ChangeTheme(themeName)">Switch to @themeName</button>
        }
    </BlazorThemeSwitcher>
</BlazorApplyTheme>

<BlazorApplyTheme ThemePackPath="@DefaultTheme.Bootstrap" InitialTheme="Theme 1" ExtendedThemePackPath="theme-packs/MyTheme.json" Context="ApplyTheme" Token="second-blazor-apply-theme">
    <div>
        Custom Elemenent:
        <button class="@ApplyTheme["my-element"]">My button</button>
    </div>
</BlazorApplyTheme>
<BlazorThemeSwitcher Context="ThemeSwitcher" TargetToken="second-blazor-apply-theme">
    @foreach (string themeName in ThemeSwitcher.Themes)
    {
        <button type="button" @onclick="_ => ThemeSwitcher.ChangeTheme(themeName)">Switch to @themeName</button>
    }
</BlazorThemeSwitcher>